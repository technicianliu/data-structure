一：树的定义和表示
    基本术语：
             （1），结点拥有的子树数目称为结点的度，树的度称为树中结点度的最大值
             （2），叶子叫做终端结点
             （3），深度和高度，树中结点的最大层次称为树的深度。高度的定义是：叶子结点的高度为零，非叶子结点的高度等于
                    它的子女结点高度的最大值加1，这样树的高度就是根结点的高度。深度和高度数值相同
             （4），森林：是m棵互不相交的树的集合。在数据结构中，树和森林的概念相近，删去一棵树的根结点，便得到一个森林；
                    加上一个结点作为森林中所有树的根结点，森林就变为一棵树。
                    
二：树和森林：  
    存储表示：（博客中有图形表示）
            （1），父指针表示法（在Huffman树当中用到了这个表示方法）
                   用一组连续空间存储输的结点，同时在每个结点中附设一个指示器指示其双亲结点在表中的位置（指示器是一个整
                   数值，代表某个序号）。
             （2），子女链表表示法，采用多重链表，每个结点有多个指针域，其中每个结点指向一棵子树的根结点，其中每个子树
                   指向一棵子树的根结点，即把每个孩子排列成指针链表。子女链表表示法是一个链表向量。
                   每个链表有两部分组成：
                   <1>孩子结点：其数据域存放双亲结点的孩子结点在向量中的序号，指针域存放双亲结点下一个孩子的链接地址。
                   <2>头结点：其数据域存放结点的值，指针域存放第一个孩子的链接地址。
             （3），子女-兄弟链表表示法：用二叉树链表做数据结构。这种结构的优点是：它和二叉树的二叉链表表示完全一样，可以
                    用二叉树的算法来实现对树的操作。
